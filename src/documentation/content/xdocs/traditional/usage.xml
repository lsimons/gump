<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">
<document>

  <header>
    
    <title>Gump</title>
  <authors><person name="Sam Ruby" email="rubys@us.ibm.com"/></authors></header>

<body>

    <section><title>Getting Started</title>
    <note>
    	Traditional Gump shares the first few steps with Python Gump, so start <link href="site:gettingstarted">here</link>
    </note>
    </section>

    <section><title>Generation</title>
      <p>For Unix and cygwin installations using bash:</p>

      <source>
        bash ./gen.sh
      </source>

      <p>For Windows NT and 2K installations:</p>

      <source>
        gen
      </source>

      <p>This process generates the update and build scripts used in
      subsequent steps.  It also logs you onto any :pserver: cvs
      repository defined which you are not currently logged onto, and
      generates the various cross reference pages.</p>
    </section>

    <section><title>Update</title>
      <p>For Unix and cygwin installations using bash:</p>

      <source>
         bash ./update.sh ( all | module ... )
      </source>

      <p>For Windows NT and 2K installations:</p>

      <source>
         update ( all | module ... )
      </source>

      <p>With this command you can specify you either want to update all or a
      specified list or modules.  If the module had not been previously
      checked out (or the target cvs directory has been removed) then a
      checkout is done instead.  If <code>all</code> is specified then a
      web page containing the logs for each update is produced, as well as
      a summary page.  If specific modules are listed, then the output comes
      to the screen.</p>
    </section>

    <section><title>Build</title>
      <p>For Unix and cygwin installations using bash:</p>

      <source>
         bash ./build.sh ( all | clean | ( project [ target ... ] ) )
      </source>

      <p>For Windows NT and 2K installations:</p>

      <source>
         build ( all | clean | ( project [ target ... ] ) )
      </source>

      <p>With this command you can specify you either want to build all or a
      specified project.  If <code>all</code> is specified then a
      web page containing the logs for each build is produced, as well as
      a summary page.  If <code>clean</code> is specified then the only
      action that is performed is to synchronize the build directories from
      the cvs directories.  If a project is specified, then the output comes
      to the screen, using the target you provide.</p>
    </section>

</body>
</document>
