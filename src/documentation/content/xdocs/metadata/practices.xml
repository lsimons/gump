<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">
<document>

  <header>
    
    <title>GOM: Good Practices</title>
	  <authors>
  		<person name="Adam R. B. Jack" email="ajack@apache.org"/>
  	  </authors>
  	</header>

<body>
  	
  	<section><title>Let Gump set your final jar name</title>
  		<p>Gump runs set @@DATE@@, which ought be set into the
  		jar name. Use a <link href="ant.html#property">property</link> for this.
  		</p>
  	</section>
  	
  	<section><title>Dependencies</title>
  		<section><title>Use optional dependencies</title>
  		<p>Use a <link href="project.html#option">property</link> instead of
  		<link href="project.html#depend">property</link> when at all possible.</p>
  		<p>The less mandatory dependencies a project has the more often it will
  			be Gumped, and the better <em>Fried Of Gump</em> it'll be, and
  			will make a much better dependency for downstream projects.</p>
  		</section>
  	</section>
  	
  	<section><title>Separate Test Project</title>
  		<p>If at all possible, split your project into (at least) two -- one (named <em>your-project</em>) being the main
  			compilation/archive &amp; the other (named <em>your-project</em><strong>-test</strong>) that
  			just runs unit tests.
  		</p>
  		<p>This require only the second to depend upon <em>junit</em>, say &amp; reduces the dependenceis
  			of the first.
  		</p>
  		<p>This allows downstream dependees to select which of your projects they wish to depend upon. If they depend upon 
  			<em>your-project</em> (and <strong>perhaps optionally</strong> on <em>your-project-test</em>) then
  			if some obscure unit test fails still get Gumped &amp; don't mis a run.</p>
  	</section>
  	
  	<section><title>Ant</title>  	
  		<section><title>Selecting a minimal target</title> 
  			<p>Select an ant target (from your build) that minimally compiles the code, and creates output jars.
  				Try to avoid targets the do full distributions (in numerous formats), or does uneccessary work like
  				javadoc generation. 
  			</p>
  			<p>For your *-test project (see 'Separate Test Project') do unit tests only.</p>
  		</section>
  	</section>
  	
</body>
</document>
