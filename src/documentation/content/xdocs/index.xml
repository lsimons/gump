<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">
<document>

  <header>
    
    <title>Apache Gump</title>

  	<authors>
  		<person name="Sam Ruby" email="rubys AT us.ibm DOT com"/>
  		<person name="Adam Jack" email="ajack AT sybase DOT com"/>
  		<person name="Community" email="general AT gump DOT apache DOT org"/>
  	</authors>
  </header>
<body>

  <section><title>What is Gump?</title>

  <p>
Gump is Apache's continuous integration tool. It is written in python and fully supports Apache Ant, 
Apache Maven and other build tools. Gump is unique in that it builds and compiles software against 
the latest development versions of those projects. This allows gump to detect potentially 
incompatible changes to that software just a few hours after those changes are checked into the 
version control system. Notifications are sent to the project team as soon as such a change is 
detected, referencing more detailed reports available online.
  </p>

  <p>
You can set up and run Gump on your own machine and run it on your own projects, however it is 
currently most famous for building most of Apache's java-based projects and their dependencies (which 
constitutes several million lines of code split up into hundreds of projects). For this purpose, the 
gump project maintains its own dedicated server.
  </p>

  </section>

  <section><title>How does Gump work?</title>

    <p>
      With Traditional Gump, <link href="http://cvs.apache.org/viewcvs/gump/project">
      project</link> definitions are converted from XML to scripts native to the
      platform on which you are running.  With Python Gump the XML is mapped into in memory
      objects for processing. Scripts execute cvs or svn update
      commands for every module which contains a project being built, and
      invoke builds for each project in an order that ensures that dependencies
      are satisfied. Build outputs are processed and, if successful, dependent projects
      are then built on these outputs.
    </p>

    <p>
      The commands use the actual build.xml files from the projects, but do
      not use the scripts or jar files checked into CVS/SVN.  Instead, the
      CLASSPATH is set and properties are passed on the command line.
    </p>
    
    <note>
    	Gump set's Ant's <link href="http://ant.apache.org/manual/sysclasspath.html">build.sysclasspath</link> to <strong>only</strong> and manages the system classpath:<br/>
    	To quote Ant:<br/>
    	<em>Only the system classpath is used and classpaths specified in build files, etc are ignored. 
    		This situation could be considered as the person running the build file knows more about the environment than the person writing the build file</em>
    </note>

    <p>
      The net effect is that every project is built every day with the latest
      version of every dependency - including the latest Ant, latest JUnit,
      latest XML parser.
    </p>

    <p>
      The results are captured into html pages that largely are consistent
      with the style of the Jakarta project.  An extensive amount of hypertext
      links are added to allow quick and easy navigation, and failures are
      color coded on the main build page.
    </p>

    <p>
      A Perl script which is driven off of a naglist will optionally send
      e-mails to various newsgroups upon matching strings being found in the
      build output.  This is typically used to alert developers of build
      failures.
    </p>
  </section>

  <section><title>Where is Gump?</title>
    <ul>
      <li><link href="http://cvs.apache.org/viewcvs/gump/">Source</link></li>
    </ul>
  </section>

  <section><title>When does Gump run?</title>

    <p>
      Gump runs continually in various locations, primarily on Apache hardware, see below.	  
    </p>

	<note>
	Gump operates best in when distributed (over various servers). Please contact us if you are willing to
	contribute resources to this project.
	</note>
	
    <table>
      <tr>
        <th>Site</th>
        <th>JVM</th>
        <th>Comments</th>
      </tr>
      <tr>
        <td><fork href="http://brutus.apache.org/gump/public/">Apache (Brutus)</fork> </td>
        <td>1.4.2_04</td>
        <td>Python Gump</td>
      </tr>
      <tr>
        <td><fork href="http://brutus.apache.org/gump/jdk15/">Apache (Brutus) JDK15</fork> </td>
        <td>1.5.0-beta2</td>
        <td>Python Gump</td>
      </tr>
    </table>

  </section>

  <section><title>Who is Gump?</title>
    <p>
      Gump was named after
      <fork href="http://www.google.com/search?q=Forrest+Gump">Forrest Gump</fork>,
      the title character in a movie.  The process for building was to do a
      "Generate", followed by cvs "Updates", followed by a "Build All".  This
      was repetitive, so a command was created to combine these operations -
      and it was named "guba".  This sound this made when spoken reminded me
      of "Bubba Gump".
    </p>

    <p>
      This seemed oddly appropriate as much of the motivation for Gump
      derived from the frustrations building Cocoon.  The FAQ for
      that project indicate that the project was named after a movie that the
      creator of that project was particularly fond of, so it seemed fitting
      that this effort would be named after a movie.
    </p>

    <p>
      A number of other fortunate coincidences proved this was the right choice for a name.  
      From the role of the feather in the
      opening and closing scenes (something adapted to the Apache
      feature for the Gump icon), to the catch phase of "Stupid is as Stupid
      does" - something that captures the spirit of a large number of build
      errors caught by this process.  And most significantly (to some) - the
      wisdom passed on from Gump's mother that "Life is like a box of
      chocolates - you never know what you are going to get!".  I can think
      of no more apt description of a build process which takes the absolute
      latest versions of almost everything and attempts to build them together!
    </p>
  </section>

  <section><title>Why was Gump written?</title>
    <p>
      That question is complex enough that it deserves a
      <link href="why.html">separate page</link>.
    </p>
  </section>
</body>
</document>
