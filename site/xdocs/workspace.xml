<?xml version="1.0"?>
<document>

  <properties>
    <author email="rubys@us.ibm.com">Sam Ruby</author>
    <title>Gump</title>
  </properties>

<body>

  <section name="workspace">
    <p>This represents the combination of projects (either referenced
    directly or indirectly, via profiles) that are to be built together.
    By default, workspaces are named after the hostname of the computer
    which you are building on.</p>

    <table>
      <tr>
        <th>Attribute</th>
        <th>Description</th>
        <th>Required?</th>
      </tr>
      <tr>
        <td>basedir</td>
        <td>Fully qualified directory into which all projects will be
          extracted built.
        </td>
        <td>No</td>
      </tr>
      <tr>
        <td>pkgdir</td>
        <td>Default directory in which to find projects which are installed
          as packages instead of being built.  Examples being various jars
          which can be downloaded from Sun's web site.
        </td>
        <td>No</td>
      </tr>
      <tr>
        <td>cvsdir</td>
        <td>Workarea for cvs extracts.  The generated update script will
          do the cvs checkouts or updates into this directory.  The generated
          build script will copy the results into the basedir prior to
          building.
        </td>
        <td>No.  Defaults to ${basedir}/cvs</td>
      </tr>
      <tr>
        <td>logdir</td>
        <td>Directory into which the generated html logs are placed.</td>
        <td>No.  Defaults to ${basedir}/log</td>
      </tr>
      <tr>
        <td>version</td>
        <td>Which version of the Gump dtd this workspace was defined against.
          The current version is "0.3".
        </td>
        <td>Yes</td>
      </tr>
      <tr>
        <td>sync</td>
        <td>The name of the command, along with any desired parameters, used to
          synchronize the build directory with the cvs directory.  This can make
          a <em>considerable</em> performance advantage over the default action
          which is to recursively remove the directory and copy the entire
          directory tree.  Recommended value for this parameter is
          <code>"rsync -r -a --delete"</code>.
        </td>
        <td>No</td>
      </tr>
      <tr>
        <td>bootclass</td>
        <td>If this value is set to "yes", it will enable placing jars on the
          bootclasspath.  Default is "no".  Consider this function 
          experimental at this time.  See the description for
          <a href="project.html">project</a> for details.
        </td>
        <td>No</td>
      </tr>
    </table>
    <p/>

    <subsection name="property">
      <p>Global properties which are to be applied to every Ant execution.
      Commonly used to specify the "build.sysclasspath" property which
      tells Ant how to deal with classpaths specified inside the build.xml
      files</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>name</td>
          <td>Name of the property to set.</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>value</td>
          <td>Desired value</td>
          <td>Yes</td>
        </tr>
      </table>
    </subsection>

    <subsection name="profile">
      <p>Collections of projects and repositories.  While a complete
      profile can be defined here, typically one is referenced via
      href.  For a complete description, see the documentation for
      <a href="profile.html">profile</a>.</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>href</td>
          <td>URI of the file containing the profile definition</td>
          <td>Yes</td>
        </tr>
      </table>
    </subsection>

    <subsection name="module">
      <p>An individual module to be included.  While a complete
      module can be defined here, typically one is referenced via
      href.  For a complete description, see the documentation for
      <a href="module.html">module</a>.</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>href</td>
          <td>URI of the file containing the module definition</td>
          <td>Yes</td>
        </tr>
      </table>
    </subsection>

    <subsection name="project">
      <p>An individual project to be included.  While a complete
      project can be defined here, typically one is referenced via
      href.  For a complete description, see the documentation for
      <a href="project.html">project</a>.</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>name</td>
          <td>Name of the project to be modified</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>home</td>
          <td>Convenient way to specify an override for a root/home
            element.
          </td>
          <td>No</td>
        </tr>
      </table>
    </subsection>

    <subsection name="repository">
      <p>An repository from which one or more modules may be obtained
      While a complete repository can be defined here, typically one is
      referenced via href.  For a complete description, see the documentation
      for <a href="repository.html">repository</a>.</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>href</td>
          <td>URI of the file containing the repository definition</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>method</td>
          <td>Convenient way to specify an override for a root/method
            element
          </td>
          <td>No</td>
        </tr>
        <tr>
          <td>user</td>
          <td>Convenient way to specify an override for a root/user
            element
          </td>
          <td>No</td>
        </tr>
        <tr>
          <td>path</td>
          <td>Convenient way to specify an override for a root/path
            element
          </td>
          <td>No</td>
        </tr>
      </table>
    </subsection>


    <subsection name="javadoc">
      <p>Enables publishing of a summary page linking all of the javadocs
      produced in the process.  This will be placed in the workspace log
      directory with the name "javadoc.html".</p>

      <table>
        <tr>
          <th>Attribute</th>
          <th>Description</th>
          <th>Required?</th>
        </tr>
        <tr>
          <td>url</td>
          <td>The prefix to be used for hrefs on the javadoc.html page.
          This can be used to point directly into the build directory or
          used in conjunction with the <code>dir</code> attribute described
          below.  If this attribute is not specified, <code>file:///</code>
          urls will be generated - this is generally only suitable for
          viewing on the local machine.</td>
          <td>No</td>
        </tr>
        <tr>
          <td>dir</td>
          <td>This attribute tells where the physical directory associated with
          the url can be found.  <b>Note:</b> the code which copies the
          javadocs to this directory is currently not integrated into Gump.
          This will be corrected shortly.</td>
          <td>No</td>
        </tr>
      </table>
    </subsection>

  </section>
</body>
</document>

