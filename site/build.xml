<!--
    Build's Gump's web presence.  Depends on jakarta-site2 and xml-batik.
    See build.properties for details.
  -->

<project name="gump-site" default="all" basedir=".">

    <!-- Give user a chance to override without editing this file
         (and without typing -D each time it compiles it) -->
    <property file="build.properties" />
    <property file="${user.home}/build.properties" />

    <!-- Initialize properties -->
    <property name="project.name" value="gump-site"/>
    <property name="docs.src"     location="xdocs"/>
    <property name="docs.dest"    location="docs"/>
    <property name="project.file" value="stylesheets/project.xml" />
    <property name="site.dir"     location="../jakarta-site2" />
    <property name="batik.dir"     location="../xml-batik" />
    <property name="templ.path"   location="${docs.src}/stylesheets" />
    <property name="velocity.props" location="${docs.src}/velocity.properties"/>

    <!-- Add jakarta-site2 and batik jars to the classpath -->
    <path id="classpath">
        <pathelement path="${java.class.path}" />
        <fileset dir="${site.dir}/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${batik.dir}">
            <include name="batik-rasterizer.jar"/>
        </fileset>
    </path>

    <!-- Determine what jars are present -->
    <target name="setenv">
        <available classname="org.apache.velocity.anakia.AnakiaTask"
                   property="AnakiaTask.present">
            <classpath refid="classpath"/>
        </available>

        <available classname="org.apache.batik.apps.rasterizer.Main"
                   property="Rasterizer.present">
            <classpath refid="classpath"/>
        </available>

        <condition property="Rasterizer.required">
          <and>
            <available classname="org.apache.batik.apps.rasterizer.Main">
                <classpath refid="classpath"/>
            </available>
            <not>
              <uptodate targetfile="${docs.dest}/images/bench.png">
                <srcfiles dir="${docs.src}" includes="bench.svg"/>
              </uptodate>
            </not>
          </and>
        </condition>

        <echo message="--- Build environment for ${project.name} ---" />
        <echo message="--- Flags (Note: If the {property name} is displayed, "/>
        <echo message="           then the component is not present)" />
        <echo message=""/>
        <echo message="AnakiaTask.present=${AnakiaTask.present}" />
        <echo message="Rasterizer.present=${Rasterizer.present}" />
    </target>

    <!-- Produce the web site if Anakia is present -->
    <target name="docs" depends="setenv" if="AnakiaTask.present">
        <taskdef name="anakia"
            classname="org.apache.velocity.anakia.AnakiaTask">
            <classpath refid="classpath"/>
        </taskdef>

        <copy file="${site.dir}/xdocs/stylesheets/site.vsl"
           todir="${docs.src}/stylesheets"/>

        <anakia basedir="${docs.src}" destdir="${docs.dest}/"
             extension=".html" style="./site.vsl"
             projectFile="${project.file}"
             excludes="**/stylesheets/**"
             includes="**/*.xml"
             lastModifiedCheck="true"
             templatePath="${templ.path}"
             velocityPropertiesFile="${velocity.props}">
        </anakia>
    </target>

    <!-- Produce the Gump icon if out of date and batik present -->
    <target name="png" depends="setenv" if="Rasterizer.required">
        <mkdir dir="${docs.dest}/images"/>
        <copy file="${batik.dir}/samples/asf-logo.svg" todir="${docs.src}"/>
        <java fork="yes" classname="org.apache.batik.apps.rasterizer.Main">
             <arg value="${docs.src}/bench.svg"/>
             <arg value="-d"/> <arg value="${docs.dest}/images"/>
        </java>
    </target>

    <!-- All ::= docs + png -->
    <target name="all" depends="docs,png"/>

    <!-- Clean all files produced during the build process -->
    <target name="clean">
        <delete dir="${docs.dest}"/>
        <delete file="${docs.src}/asf-logo.svg"/>
        <delete file="${docs.src}/stylesheets/site.vsl"/>
        <delete file="velocity.log"/>
    </target>
</project>
